name: Test and Lint Python Package

env:
  DB_PROFILES: ${{ secrets.DB_PROFILES }}
  DATABRICKS_CLUSTER_ID: "${{ secrets.DATABRICKS_CLUSTER_ID }}"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: html_publisher
    strategy:
      matrix:
        python-version: ["3.10"] 
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install git+https://github.com/databricks-industry-solutions/industry-solutions-release

    - name: Package solution accelerator
      run: |
          
          import os
          import configparser
          import io
          
          config = configparser.ConfigParser()
          config.read_file(io.StringIO(os.environ['DB_PROFILES']))
          config = config['DEMO']

          os.environ['DATABRICKS_TOKEN'] = config['host']
          os.environ['DATABRICKS_HOST'] = config['token']

          from databricks.sdk import WorkspaceClient
          from databricks.sdk.service.jobs import NotebookTask, Task, GitSource, Source, GitProvider

          branch = os.getenv('GITHUB_HEAD_REF', 'bugfix/github_act')

          print(branch)

          # Create workspace client using host and token
          workspace = WorkspaceClient( host=config['host'], token=config['token'] )

          # Define variables
          repo_url = 'https://github.com/databricks-industry-solutions/pixels.git'

          # Define the git source
          git_source = GitSource(
              git_url=repo_url,
              git_provider=GitProvider.GIT_HUB,
              git_branch=branch
          )

          # Define the notebook task
          notebook_task = NotebookTask(
              notebook_path="pytest_databricks.py",
              base_parameters={},
              source=Source.GIT,
          )

          # Define the task
          task = Task(
              task_key="notebook_task",
              notebook_task=notebook_task,
          )

          # Submit the task
          run_response = workspace.jobs.submit_and_wait(run_name="pixels_gitaction_test", tasks=[task], git_source=git_source)

          print(run_response.state.result_state.value)
        
      shell: python

    - name: Install dependencies for pixels
      run: |
        python -m pip install --upgrade pip
        make dev

    - name: Run tests
      run: make test